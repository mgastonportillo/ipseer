{"mappings":"AAAA,MAAM,SAAS,SAAS,aAAa,CAAC;AACtC,MAAM,WAAW,SAAS,aAAa,CAAC;AACxC,MAAM,YAAY,SAAS,aAAa,CAAC;AAEzC,OAAO,gBAAgB,CAAC,SAAS,OAAO;IACtC,IAAI;QACF,IAAI,SAAS,MAAM,eAAe,EAAE,MAAM,CAAC,KAAK;QAChD,SAAS,KAAK,CAAC,UAAU,GAAG;QAC5B,UAAU,SAAS,GAAG;IACxB,EAAE,OAAO,OAAO;QACd,8CAA8C;QAC9C,SAAS,KAAK,CAAC,UAAU,GAAG;QAC5B,UAAU,SAAS,GAAG;IACxB;AACF;AAEA,eAAe,eAAe,MAAM;IAClC,MAAM,WAAW,MAAM,MACrB,CAAC,0CAA0C,EAAE,OAAO,CAAC,EACrD;QACE,SAAS;YACP,QAAQ;QACV;IACF;IAEF,MAAM,UAAU,MAAM,SAAS,IAAI;IACnC,OAAO,QAAQ,MAAM,CAAC,EAAE,CAAC,IAAI;AAC/B","sources":["index.js"],"sourcesContent":["const domain = document.querySelector(\"#domain\");\nconst fieldset = document.querySelector(\"#result\");\nconst ipAddress = document.querySelector(\"#ip-address\");\n\ndomain.addEventListener(\"input\", async (e) => {\n  try {\n    let result = await fetchIPAddress(e.target.value);\n    fieldset.style.visibility = \"visible\";\n    ipAddress.innerText = result;\n  } catch (error) {\n    // console.error(\"Error fetching IP:\", error);\n    fieldset.style.visibility = \"hidden\";\n    ipAddress.innerText = \"\";\n  }\n});\n\nasync function fetchIPAddress(domain) {\n  const response = await fetch(\n    `https://cloudflare-dns.com/dns-query?name=${domain}`,\n    {\n      headers: {\n        accept: \"application/dns-json\",\n      },\n    },\n  );\n  const respObj = await response.json();\n  return respObj.Answer[0].data;\n}\n"],"names":[],"version":3,"file":"index.c36f364e.js.map","sourceRoot":"/__parcel_source_root/"}